name: Deploy Jar & Docker packages
on:
  push:
    branches: [ master ]
jobs:
  test-build-deploy-jar:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Cache maven modules
      uses: actions/cache@v1
      env:
        cache-name: serving-runtime-maven-deps
      with:
        path: ~/.m2/repository
        key: cache-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}

    - name: Build & Deploy JARs
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "<settings><servers><server><id>github</id><username>ovh</username><password>${GITHUB_TOKEN}</password></server></servers></settings>" > ~/.m2/settings.xml
        make initialize-tensorflow initialize-huggingface initialize-torch deploy

  build-docker-tensorflow:
    needs: test-build-deploy-jar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Build Docker image for Tensorflow only
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${GITHUB_TOKEN}" | docker login docker.pkg.github.com -u ovh --password-stdin
          make docker-build-api docker-push-api MAVEN_PROFILE=tensorflow NAME=api-tf TAG=latest REGISTRY=docker.pkg.github.com/ovh REPOSITORY=serving-runtime

  build-docker-onnx:
    needs: test-build-deploy-jar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Build Docker image for ONNX only
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${GITHUB_TOKEN}" | docker login docker.pkg.github.com -u ovh --password-stdin
          make docker-build-api docker-push-api MAVEN_PROFILE=onnx NAME=api-onnx TAG=latest REGISTRY=docker.pkg.github.com/ovh REPOSITORY=serving-runtime

  build-docker-full:
    needs: test-build-deploy-jar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Build Docker image for full features
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${GITHUB_TOKEN}" | docker login docker.pkg.github.com -u ovh --password-stdin
          make docker-build-api docker-push-api MAVEN_PROFILE=full NAME=api-full TAG=latest REGISTRY=docker.pkg.github.com/ovh REPOSITORY=serving-runtime
